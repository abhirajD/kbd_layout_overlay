name: CI Build (Windows + macOS)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show runner info
        run: |
          echo "Runner OS: $RUNNER_OS"
          uname -a || ver
        shell: bash

      - name: Prepare environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "Windows runner detected"
          cmake --version
        shell: cmd

      - name: Configure & Build (Windows via CMake)
        if: matrix.os == 'windows-latest'
        run: |
          rem Configure for Visual Studio generator (x64)
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64
          cmake --build build --config Release
          cmake --build build --config Release --target install || echo "install target not configured"
        working-directory: ${{ github.workspace }}
        shell: cmd

      - name: Collect Windows build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            build/Release/kbd_layout_overlay.exe
            build/*.zip

      - name: Prepare environment (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          echo "macOS runner detected"
          cmake --version
        shell: bash

      - name: Configure & Build (macOS via CMake)
        if: matrix.os == 'macos-latest'
        run: |
          cmake -S . -B build
          cmake --build build --config Release
        working-directory: ${{ github.workspace }}
        shell: bash

      - name: Collect macOS build artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            build/KbdLayoutOverlay.app
            build/*.zip

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.os }}
          path: |
            build/build.log
            build/build.log || true
